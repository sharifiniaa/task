{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Hosein\\\\Desktop\\\\Projects\\\\test-project\\\\src\\\\components\\\\QuoteCard.tsx\";\nimport React from 'react';\n\n/* \r\n\r\nexport type QuoteType = {\r\n    userId: number;\r\n    id: number;\r\n    title: string;\r\n    complated: boolean;\r\n};\r\n\r\n*/\nconst QuoteCard = props => {\n  const {\n    quote\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex flex-col lg:min-w-sm lg:max-w-sm md:max-w-sm  lg:min-h-md max-w-full bg-teal-100 shadow-sm rounded-lg p-4 m-4 ${!quote.complated ? 'bg-pink-600' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: quote.userId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: quote.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), quote && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"font-medium  text-sm text-right text-teal-500 capitalize tracking-min\",\n      children: quote.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\nexport default QuoteCard;","map":{"version":3,"sources":["C:/Users/Hosein/Desktop/Projects/test-project/src/components/QuoteCard.tsx"],"names":["React","QuoteCard","props","quote","complated","userId","id","title"],"mappings":";;AAAA,OAAOA,KAAP,MAAoC,OAApC;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAA4C;AAC1D,QAAM;AAAEC,IAAAA;AAAF,MAAYD,KAAlB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAG,sHAAqH,CAACC,KAAK,CAACC,SAAP,GAAmB,aAAnB,GAAmC,EAAG,EAA5K;AAAA,4BACI;AAAA,gBAAID,KAAK,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAIF,KAAK,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,YAFJ,EAIKH,KAAK,iBACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALR,eAQI;AAAI,MAAA,SAAS,EAAC,uEAAd;AAAA,gBAAuFA,KAAK,CAACI;AAA7F;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAfD;;AAiBA,eAAeN,SAAf","sourcesContent":["import React, { ReactElement } from 'react';\r\nimport { QuoteType } from './types';\r\n\r\ntype QuoteCardPropType = {\r\n    quote: QuoteType;\r\n};\r\n\r\n\r\n/* \r\n\r\nexport type QuoteType = {\r\n    userId: number;\r\n    id: number;\r\n    title: string;\r\n    complated: boolean;\r\n};\r\n\r\n*/\r\n\r\nconst QuoteCard = (props: QuoteCardPropType): ReactElement => {\r\n    const { quote } = props;\r\n\r\n    return (\r\n        <div className={`flex flex-col lg:min-w-sm lg:max-w-sm md:max-w-sm  lg:min-h-md max-w-full bg-teal-100 shadow-sm rounded-lg p-4 m-4 ${!quote.complated ? 'bg-pink-600' : ''}`}>\r\n            <p>{quote.userId}</p>\r\n            <p>{quote.id}</p>\r\n\r\n            {quote && (\r\n                <p>completed</p>\r\n            )}\r\n\r\n            <h3 className=\"font-medium  text-sm text-right text-teal-500 capitalize tracking-min\">{quote.title}</h3>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuoteCard;\r\n"]},"metadata":{},"sourceType":"module"}