{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Hosein\\\\Desktop\\\\Projects\\\\test-project\\\\pages\\\\index.tsx\",\n    _this = this;\n\nimport { NavBar } from '../src/components/NavBar';\nimport Footer from '../src/components/Footer';\nimport QuoteCard from '../src/components/QuoteCard';\n\nvar IndexPage = function IndexPage(_ref) {\n  var data = _ref.data;\n  //for client side request\n  // const [quotes, setQuotes] = useState<QuoteType[] | null>(null);\n\n  /*     useEffect(() => {\r\n      const source = axios.CancelToken.source();\r\n      fetchQuotes(source);\r\n        return () => {\r\n          source.cancel();\r\n      };\r\n  }, []); */\n\n  /*     const fetchQuotes = async (source) => {\r\n          try {\r\n              const { data } = await axios({\r\n                  method: 'get',\r\n                  url: 'https://jsonplaceholder.typicode.com/todos/',\r\n                  cancelToken: source.token,\r\n              });\r\n              if (data) {\r\n                  setQuotes(data.slice(0, 50));\r\n              }\r\n          } catch (err) {\r\n              // handle error\r\n              console.log(err);\r\n          } finally {\r\n              // disable the loading\r\n          }\r\n      }; */\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto  max-w-7xl\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row flex-wrap justify-start mt-4\",\n        children: quotes && quotes.map(function (quote, index) {\n          return /*#__PURE__*/_jsxDEV(QuoteCard, {\n            quote: quote\n          }, \"quote-\".concat(index), false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 36\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true);\n};\n\n_c = IndexPage;\nexport var __N_SSP = true;\nexport default IndexPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndexPage\");","map":{"version":3,"sources":["C:/Users/Hosein/Desktop/Projects/test-project/pages/index.tsx"],"names":["NavBar","Footer","QuoteCard","IndexPage","data","quotes","map","quote","index"],"mappings":";;;;;;AAEA,SAASA,MAAT,QAAuB,0BAAvB;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AAMA,IAAMC,SAAa,GAAG,SAAhBA,SAAgB,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAGhC;AAEA;;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEI,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA,6BAOI;AAAK,QAAA,SAAS,EAAC,4CAAf;AAAA,kBACKC,MAAM,IACHA,MAAM,CAACC,GAAP,CAAW,UAACC,KAAD,EAAmBC,KAAnB,EAAqC;AAC5C,8BAAO,QAAC,SAAD;AAAkC,YAAA,KAAK,EAAED;AAAzC,6BAAyBC,KAAzB;AAAA;AAAA;AAAA;AAAA,mBAAP;AACH,SAFD;AAFR;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,aAFJ,eAgBI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,aAhBJ;AAAA,kBADJ;AAoBH,CAtDD;;KAAML,S;;AAqEN,eAAeA,SAAf","sourcesContent":["import { FC, useEffect, useState } from 'react';\r\nimport { Quotes } from '../src/components/Quotes';\r\nimport { NavBar } from '../src/components/NavBar';\r\nimport { QuoteType } from '../src/components/types';\r\nimport Footer from '../src/components/Footer';\r\nimport QuoteCard from '../src/components/QuoteCard';\r\nimport { GetServerSideProps } from 'next';\r\n\r\n// import Pagination from '../src/components/Pagination';\r\nimport axios from 'axios';\r\n\r\nconst IndexPage: FC = ({ data }) => {\r\n\r\n\r\n    //for client side request\r\n\r\n    // const [quotes, setQuotes] = useState<QuoteType[] | null>(null);\r\n\r\n    /*     useEffect(() => {\r\n        const source = axios.CancelToken.source();\r\n        fetchQuotes(source);\r\n\r\n        return () => {\r\n            source.cancel();\r\n        };\r\n    }, []); */\r\n\r\n/*     const fetchQuotes = async (source) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'get',\r\n                url: 'https://jsonplaceholder.typicode.com/todos/',\r\n                cancelToken: source.token,\r\n            });\r\n            if (data) {\r\n                setQuotes(data.slice(0, 50));\r\n            }\r\n        } catch (err) {\r\n            // handle error\r\n            console.log(err);\r\n        } finally {\r\n            // disable the loading\r\n        }\r\n    }; */\r\n\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <div className=\"container mx-auto  max-w-7xl\">\r\n                {/* <div className=\"mt-4 flex flex-row\">\r\n                    <div>\r\n                        <p>Search results for 'buddha'</p>\r\n                    </div>\r\n                    <Pagination />\r\n                </div> */}\r\n                <div className=\"flex flex-row flex-wrap justify-start mt-4\">\r\n                    {quotes &&\r\n                        quotes.map((quote: QuoteType, index: number) => {\r\n                            return <QuoteCard key={`quote-${index}`} quote={quote} />;\r\n                        })}\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport const getServerSideProps: GetServerSideProps = async (context) => {\r\n    const { data } = await axios({\r\n        method: 'get',\r\n        url: 'https://jsonplaceholder.typicode.com/todos/',\r\n    });\r\n    console.log(data)\r\n    return {\r\n        props: {\r\n          data,\r\n        },\r\n      }\r\n};\r\n\r\nexport default IndexPage;\r\n"]},"metadata":{},"sourceType":"module"}