{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Hosein\\\\Desktop\\\\Projects\\\\test-project\\\\pages\\\\index.tsx\";\nimport { useEffect } from 'react';\nimport { NavBar } from '../src/components/NavBar';\nimport Footer from '../src/components/Footer';\nimport QuoteCard from '../src/components/QuoteCard';\n// import Pagination from '../src/components/Pagination';\nimport axios from 'axios';\n\nconst IndexPage = () => {\n  // const [quotes, setQuotes] = useState<QuoteType[] | null>(null);    for \n  useEffect(() => {\n    const source = axios.CancelToken.source();\n    fetchQuotes(source);\n    return () => {\n      source.cancel();\n    };\n  }, []);\n\n  const fetchQuotes = async source => {\n    try {\n      const {\n        data\n      } = await axios({\n        method: 'get',\n        url: 'https://jsonplaceholder.typicode.com/todos/',\n        cancelToken: source.token\n      });\n\n      if (data) {\n        setQuotes(data.slice(0, 50));\n      }\n    } catch (err) {\n      // handle error\n      console.log(err);\n    } finally {// disable the loading\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto  max-w-7xl\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row flex-wrap justify-start mt-4\",\n        children: quotes && quotes.map((quote, index) => {\n          return /*#__PURE__*/_jsxDEV(QuoteCard, {\n            quote: quote\n          }, `quote-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\nexport const getServerSideProps = async context => {\n  const {\n    data\n  } = await axios({\n    method: 'get',\n    url: 'https://jsonplaceholder.typicode.com/todos/'\n  });\n  console.log(data);\n  return {\n    props: {\n      data\n    }\n  };\n};\nexport default IndexPage;","map":{"version":3,"sources":["C:/Users/Hosein/Desktop/Projects/test-project/pages/index.tsx"],"names":["useEffect","NavBar","Footer","QuoteCard","axios","IndexPage","source","CancelToken","fetchQuotes","cancel","data","method","url","cancelToken","token","setQuotes","slice","err","console","log","quotes","map","quote","index","getServerSideProps","context","props"],"mappings":";;;AAAA,SAAaA,SAAb,QAAwC,OAAxC;AAEA,SAASC,MAAT,QAAuB,0BAAvB;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAGA;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAa,GAAG,MAAM;AACxB;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMM,MAAM,GAAGF,KAAK,CAACG,WAAN,CAAkBD,MAAlB,EAAf;AACAE,IAAAA,WAAW,CAACF,MAAD,CAAX;AAEA,WAAO,MAAM;AACTA,MAAAA,MAAM,CAACG,MAAP;AACH,KAFD;AAGH,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMD,WAAW,GAAG,MAAOF,MAAP,IAAkB;AAClC,QAAI;AACA,YAAM;AAAEI,QAAAA;AAAF,UAAW,MAAMN,KAAK,CAAC;AACzBO,QAAAA,MAAM,EAAE,KADiB;AAEzBC,QAAAA,GAAG,EAAE,6CAFoB;AAGzBC,QAAAA,WAAW,EAAEP,MAAM,CAACQ;AAHK,OAAD,CAA5B;;AAKA,UAAIJ,IAAJ,EAAU;AACNK,QAAAA,SAAS,CAACL,IAAI,CAACM,KAAL,CAAW,CAAX,EAAc,EAAd,CAAD,CAAT;AACH;AACJ,KATD,CASE,OAAOC,GAAP,EAAY;AACV;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAZD,SAYU,CACN;AACH;AACJ,GAhBD;;AAkBA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA,6BAOI;AAAK,QAAA,SAAS,EAAC,4CAAf;AAAA,kBACKG,MAAM,IACHA,MAAM,CAACC,GAAP,CAAW,CAACC,KAAD,EAAmBC,KAAnB,KAAqC;AAC5C,8BAAO,QAAC,SAAD;AAAkC,YAAA,KAAK,EAAED;AAAzC,aAAiB,SAAQC,KAAM,EAA/B;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,SAFD;AAFR;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAgBI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA,kBADJ;AAoBH,CAlDD;;AAoDA,OAAO,MAAMC,kBAAsC,GAAG,MAAOC,OAAP,IAAmB;AACrE,QAAM;AAAEf,IAAAA;AAAF,MAAW,MAAMN,KAAK,CAAC;AACzBO,IAAAA,MAAM,EAAE,KADiB;AAEzBC,IAAAA,GAAG,EAAE;AAFoB,GAAD,CAA5B;AAIAM,EAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACA,SAAO;AACHgB,IAAAA,KAAK,EAAE;AACLhB,MAAAA;AADK;AADJ,GAAP;AAKH,CAXM;AAaP,eAAeL,SAAf","sourcesContent":["import { FC, useEffect, useState } from 'react';\r\nimport { Quotes } from '../src/components/Quotes';\r\nimport { NavBar } from '../src/components/NavBar';\r\nimport { QuoteType } from '../src/components/types';\r\nimport Footer from '../src/components/Footer';\r\nimport QuoteCard from '../src/components/QuoteCard';\r\nimport { GetServerSideProps } from 'next';\r\n\r\n// import Pagination from '../src/components/Pagination';\r\nimport axios from 'axios';\r\n\r\nconst IndexPage: FC = () => {\r\n    // const [quotes, setQuotes] = useState<QuoteType[] | null>(null);    for \r\n\r\n    useEffect(() => {\r\n        const source = axios.CancelToken.source();\r\n        fetchQuotes(source);\r\n\r\n        return () => {\r\n            source.cancel();\r\n        };\r\n    }, []);\r\n\r\n    const fetchQuotes = async (source) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'get',\r\n                url: 'https://jsonplaceholder.typicode.com/todos/',\r\n                cancelToken: source.token,\r\n            });\r\n            if (data) {\r\n                setQuotes(data.slice(0, 50));\r\n            }\r\n        } catch (err) {\r\n            // handle error\r\n            console.log(err);\r\n        } finally {\r\n            // disable the loading\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <div className=\"container mx-auto  max-w-7xl\">\r\n                {/* <div className=\"mt-4 flex flex-row\">\r\n                    <div>\r\n                        <p>Search results for 'buddha'</p>\r\n                    </div>\r\n                    <Pagination />\r\n                </div> */}\r\n                <div className=\"flex flex-row flex-wrap justify-start mt-4\">\r\n                    {quotes &&\r\n                        quotes.map((quote: QuoteType, index: number) => {\r\n                            return <QuoteCard key={`quote-${index}`} quote={quote} />;\r\n                        })}\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport const getServerSideProps: GetServerSideProps = async (context) => {\r\n    const { data } = await axios({\r\n        method: 'get',\r\n        url: 'https://jsonplaceholder.typicode.com/todos/',\r\n    });\r\n    console.log(data)\r\n    return {\r\n        props: {\r\n          data,\r\n        },\r\n      }\r\n};\r\n\r\nexport default IndexPage;\r\n"]},"metadata":{},"sourceType":"module"}